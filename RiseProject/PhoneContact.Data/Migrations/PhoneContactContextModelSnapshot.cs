// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PhoneContact.Data.EfDbContext;

namespace PhoneContact.Data.Migrations
{
    [DbContext(typeof(PhoneContactContext))]
    partial class PhoneContactContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("PhoneContact.Data.Entities.CommunicationInfoEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ContactId")
                        .HasColumnType("int");

                    b.Property<int?>("ContentTypeID")
                        .HasColumnType("int");

                    b.Property<string>("Info")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContactId");

                    b.HasIndex("ContentTypeID");

                    b.ToTable("CommunicationInfo");
                });

            modelBuilder.Entity("PhoneContact.Data.Entities.ContactEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Company")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SurName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Contact");
                });

            modelBuilder.Entity("PhoneContact.Data.Entities.ContentTypeEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("ContentType");
                });

            modelBuilder.Entity("PhoneContact.Data.Entities.UserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PhoneContact.Data.Entities.CommunicationInfoEntity", b =>
                {
                    b.HasOne("PhoneContact.Data.Entities.ContactEntity", "Contact")
                        .WithMany("CommunicationInfo")
                        .HasForeignKey("ContactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PhoneContact.Data.Entities.ContentTypeEntity", "ContentType")
                        .WithMany("CommunicationInfo")
                        .HasForeignKey("ContentTypeID");

                    b.Navigation("Contact");

                    b.Navigation("ContentType");
                });

            modelBuilder.Entity("PhoneContact.Data.Entities.ContactEntity", b =>
                {
                    b.Navigation("CommunicationInfo");
                });

            modelBuilder.Entity("PhoneContact.Data.Entities.ContentTypeEntity", b =>
                {
                    b.Navigation("CommunicationInfo");
                });
#pragma warning restore 612, 618
        }
    }
}
